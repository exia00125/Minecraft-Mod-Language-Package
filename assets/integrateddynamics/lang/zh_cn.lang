general.integrateddynamics.description=充分利用并自动控制您的设备。
general.integrateddynamics.error.no_network=无法找到有效的网络
general.integrateddynamics.true=True
general.integrateddynamics.false=False
gui.integrateddynamics.partsettings.channel=Energy Channel
gui.integrateddynamics.partsettings.side=Target Side
gui.integrateddynamics.waila.part_config=组件信息
gui.integrateddynamics.waila.item=物品: %s
gui.integrateddynamics.rewards.collected=已收集
gui.integrateddynamics.mechanical_squeezer.togglefluidautoeject=Auto-eject Fluid: %s
gui.integrateddynamics.mechanical_squeezer.togglefluidautoeject.info=Push to adjacent tanks.
gui.integrateddynamics.diagnostics.table.ticktime=Tick时间(ms)
key.integrateddynamics.logic_programmer_focus_search=精准搜索逻辑编辑器
key.integrateddynamics.logic_programmer_open_rename=重命名变量逻辑编辑器
subtitles.integrateddynamics.effect.page.flipmultiple=跳页
tile.blocks.integrateddynamics.energy_battery.info=与其他能源电池一起构成电网以增加容量。
tile.blocks.integrateddynamics.energy_battery.info.auto_supply=Auto-supply: %s
tile.blocks.integrateddynamics.logic_programmer.name=逻辑编辑器
tile.blocks.integrateddynamics.coal_generator.info=从可燃物品中获取能源
tile.blocks.integrateddynamics.materializer.info=复制变量的变量作为新的变量
tile.blocks.integrateddynamics.menril_log.name=门瑞欧木
tile.blocks.integrateddynamics.menril_log_filled.name=富集的门瑞欧木
tile.blocks.integrateddynamics.crystalized_menril_block.name=门瑞欧结晶块
tile.blocks.integrateddynamics.crystalized_menril_brick.name=门瑞欧结晶砖
tile.blocks.integrateddynamics.drying_basin.info=用于烘干物品或流体
tile.blocks.integrateddynamics.menril_torch_stone.name=门瑞欧石柄火把
tile.blocks.integrateddynamics.invisible_light.name=隐藏光
tile.blocks.integrateddynamics.menril_door.name=Menril Door
tile.blocks.integrateddynamics.menril_planks_stairs.name=门瑞欧木楼梯
tile.blocks.integrateddynamics.crystalized_menril_brick_stairs.name=门瑞欧晶砖楼梯
tile.blocks.integrateddynamics.block_liquid_chorus.name=紫颂果汁
tile.blocks.integrateddynamics.crystalized_chorus_block.name=紫颂果结晶块
tile.blocks.integrateddynamics.crystalized_chorus_brick.name=紫颂果结晶砖
tile.blocks.integrateddynamics.crystalized_chorus_block_stairs.name=紫颂果结晶楼梯
tile.blocks.integrateddynamics.crystalized_chorus_brick_stairs.name=紫颂果晶砖楼梯
tile.blocks.integrateddynamics.mechanical_squeezer.name=Mechanical Squeezer
tile.blocks.integrateddynamics.mechanical_squeezer.info=Squeezes, flattens and crushes using energy.
tile.blocks.integrateddynamics.mechanical_drying_basin.name=Mechanical Drying Basin
tile.blocks.integrateddynamics.mechanical_drying_basin.info=For drying items and fluids using energy.
item.items.integrateddynamics.labeller.info=命名你的变量卡,也可在逻辑编程器内工作
item.items.integrateddynamics.facade.name=伪装方块
item.items.integrateddynamics.bucket_menril_resin.name=门瑞欧树脂
item.items.integrateddynamics.crystalized_menril_chunk.name=门瑞欧结晶碎片
item.items.integrateddynamics.variable_transformer.name=输入/输出变量转换器
item.items.integrateddynamics.variable_transformer.output.name=输出变量转换器
item.items.integrateddynamics.variable_transformer.input.name=输入变量转换器
item.items.integrateddynamics.portable_logic_programmer.name=便携式逻辑编程器
item.items.integrateddynamics.crystalized_chorus_chunk.name=紫颂果结晶碎片
item.items.integrateddynamics.logic_director.name=逻辑监测器
fluid.fluids.integrateddynamics.liquidchorus=紫颂果汁
valuetype.integrateddynamics.error.value=无效变量
valuetype.integrateddynamics.value_type=Value Type
valuetype.integrateddynamics.tooltip.type_name=§eType: §r%s
valuetype.integrateddynamics.tooltip.value=§e§o类型: §r%s
valuetype.integrateddynamics.error.invalid_input="%s"与该数据类型不符。
valuetype.integrateddynamics.error.invalid_input_item=该数据类型需要一个输入物品。
valuetype.integrateddynamics.error.invalid_list_element=元素%s是无效的: %s
valuetype.integrateddynamics.error.invalid_list_value_type=列表预期的%s类型（当%s被指定时）。
valuetype.integrateddynamics.error.invalid_operator_operator=一个运算符数据类型将位于%s（当%被指定时）。
valuetype.integrateddynamics.error.invalid_operator_signature=运算符数据%s预期数据类型(%s)（当(%s)被指定）。
valuetype.integrateddynamics.error.block.no_block=插入的物品不是方块。
valuetype.integrateddynamics.error.fluid.no_fluid=插入的物品不含有流体。
valuetype.valuetypes.integrateddynamics.any.name=Any（任意类型）
valuetype.valuetypes.integrateddynamics.any.info=接受任何类型的变量
valuetype.valuetypes.integrateddynamics.number.name=Number（数字）
valuetype.valuetypes.integrateddynamics.named.name=To String（字符串表示）
valuetype.valuetypes.integrateddynamics.named.info=将变量转化为字符串形式
valuetype.valuetypes.integrateddynamics.uniquely_named.name=唯一名称
valuetype.valuetypes.integrateddynamics.uniquely_named.info=将数据转换为其唯一的名称
valuetype.valuetypes.integrateddynamics.boolean.name=Boolean（布尔值）
valuetype.valuetypes.integrateddynamics.integer.name=Integer（整型）
valuetype.valuetypes.integrateddynamics.double.name=Double（双精度型浮点型）
valuetype.valuetypes.integrateddynamics.long.name=Long（长整型）
valuetype.valuetypes.integrateddynamics.string.name=String（字符串）
valuetype.valuetypes.integrateddynamics.operator.name=Operator（运算符）
valuetype.valuetypes.integrateddynamics.list.name=List（列表）
valuetype.valuetypes.integrateddynamics.block.name=Block（方块）
valuetype.valuetypes.integrateddynamics.itemstack.name=Item（物品）
valuetype.valuetypes.integrateddynamics.entity.name=Entity（实体）
valuetype.valuetypes.integrateddynamics.fluidstack.name=Fluid（流体）
parttype.parttypes.integrateddynamics.error.low_energy=能量不足
parttype.parttypes.integrateddynamics.tooltip.display.active_value=数据: %s (%s)
parttype.parttypes.integrateddynamics.tooltip.monodirectionalconnector.group=组: %s
parttype.parttypes.integrateddynamics.tooltip.noaspects=WARNING: No aspects available. This may become usable when other mods are installed.
parttype.parttypes.integrateddynamics.entity_writer.name=Entity Writer
parttype.parttypes.integrateddynamics.entity_writer.info=Writes entity configuration
parttype.parttypes.integrateddynamics.machine_writer.name=Machine Writer
parttype.parttypes.integrateddynamics.machine_writer.info=Writes machine configuration
parttype.parttypes.integrateddynamics.connector_mono_directional.info=在一定距离内可以直线连接到其他单向连接器
parttype.parttypes.integrateddynamics.connector_omni_directional.info=可以连接到任何地方的其他全向连接器，包括不同的维度。
variable.integrateddynamics.error.invalid_item=当前变量不能在此设置面使用。
variable.integrateddynamics.error.part_not_in_network=在当前网络中找不到id为%s的组件。
variable.integrateddynamics.error.recursion=ID为%s的变量调用了自己
proxy.integrateddynamics.error.proxy_not_in_network=当前网络中找不到id为%s的代理。
proxy.integrateddynamics.error.proxy_invalid=id为%s的代理不是公开的一个变量。
proxy.integrateddynamics.error.proxy_invalid_type=id为%s的代理预期公开一个带有类型%s的变量（当%s被找到时）。
delay.integrateddynamics.tooltip.delay_id=§e§oDelay ID: §r§o%s
delay.integrateddynamics.error.delay_not_in_network=当前网络找不到id为%s的延迟。
delay.integrateddynamics.error.delay_invalid=id为%s的延迟不是公开的一个变量。
delay.integrateddynamics.error.delay_invalid_type=id为%s的延迟预期公开一个带有类型%s的变量（当%s被找到时）。
aspect.integrateddynamics.tooltip.aspect_name=§e设置面: §r%s
aspect.integrateddynamics.tooltip.value_type_name=§e类型: §r%s
aspect.integrateddynamics.tooltip.part_id=§e§o组件ID: §r§o%s
aspect.integrateddynamics.error.invalid_type=该设置面预期%s, 但是%已被指定。
aspect.aspects.integrateddynamics.write.string.audio.sound.info=播放给定的音乐
aspect.aspects.integrateddynamics.write.double.effect.particle.suspended.name=效果-停滞
aspect.aspects.integrateddynamics.write.double.effect.particle.suspended.info=以特定的速度发出停滞效果
aspect.aspects.integrateddynamics.write.double.effect.particle.depthsuspend.name=效果-停滞程度
aspect.aspects.integrateddynamics.write.double.effect.particle.depthsuspend.info=以特定的速度发出深度停滞
aspect.aspects.integrateddynamics.write.double.effect.particle.spell.name=效果-魅惑
aspect.aspects.integrateddynamics.write.double.effect.particle.spell.info=以特定的速度发出法术粒子
aspect.aspects.integrateddynamics.write.double.effect.particle.instantspell.name=效果-短暂法术
aspect.aspects.integrateddynamics.write.double.effect.particle.instantspell.info=以特定的速度发出短暂法术粒子
aspect.aspects.integrateddynamics.write.double.effect.particle.mobspell.name=效果-生物法术
aspect.aspects.integrateddynamics.write.double.effect.particle.mobspell.info=以特定的速度发出怪物法术粒子
aspect.aspects.integrateddynamics.write.double.effect.particle.mobspellambient.name=效果-环境生物法术
aspect.aspects.integrateddynamics.write.double.effect.particle.mobspellambient.info=以特定的速度发出生物法术粒子
aspect.aspects.integrateddynamics.write.double.effect.particle.witchmagic.name=效果-女巫魔法
aspect.aspects.integrateddynamics.write.double.effect.particle.witchmagic.info=以特定的速度发出女巫魔法粒子
aspect.aspects.integrateddynamics.read.nbt.block.tile.name=Tile Entity NBT
aspect.aspects.integrateddynamics.read.nbt.block.tile.info=The target Tile Entity as NBT
aspect.aspects.integrateddynamics.read.double.extradimensional.tps.name=TPS
aspect.aspects.integrateddynamics.read.double.extradimensional.tps.info=The average number of ticks per second over all worlds
aspect.aspects.integrateddynamics.read.fluidstack.block.name=Block Fluid
aspect.aspects.integrateddynamics.read.fluidstack.block.info=The fluid in the target block
aspect.aspects.integrateddynamics.read.boolean.machine.isworker.name=是否为机器
aspect.aspects.integrateddynamics.read.integer.network.elementcount.info=The amount of elements in the target network
aspect.aspects.integrateddynamics.read.integer.network.energy.batterycount.info=The amount of energy batteries in the target network
aspect.aspects.integrateddynamics.read.integer.network.energy.stored.info=The amount of energy available in the target network
aspect.aspects.integrateddynamics.read.integer.network.energy.max.info=The energy capacity of the network
aspect.aspects.integrateddynamics.read.integer.network.energy.consumptionrate.info=The current energy consumption rate of the target network per tick
aspect.aspects.integrateddynamics.write.boolean.redstone.pulse.name=Redstone Pulse
aspect.aspects.integrateddynamics.write.boolean.redstone.pulse.info=Outputs a pulse with the configured redstone value if the given value changes.
aspect.aspects.integrateddynamics.write.integer.redstone.pulse.name=Redstone Pulse
aspect.aspects.integrateddynamics.write.integer.redstone.pulse.info=Outputs a pulse with the configured redstone value if the given value changes.
aspect.aspects.integrateddynamics.read.double.world.tps.name=TPS
aspect.aspects.integrateddynamics.read.double.world.tps.info=The number of ticks per second in this world
aspect.aspecttypes.integrateddynamics.integer.slotid.name=槽ID
aspect.aspecttypes.integrateddynamics.integer.channel.name=Channel
aspect.aspecttypes.integrateddynamics.integer.offset.name=Pulse Time Offset
aspect.aspecttypes.integrateddynamics.double.offset_x.name=X Offset
aspect.aspecttypes.integrateddynamics.double.offset_y.name=Y Offset
aspect.aspecttypes.integrateddynamics.double.offset_z.name=Z Offset
aspect.aspecttypes.integrateddynamics.double.spread_x.name=X Spread
aspect.aspecttypes.integrateddynamics.double.spread_y.name=Y Spread
aspect.aspecttypes.integrateddynamics.double.spread_z.name=Z Spread
aspect.aspecttypes.integrateddynamics.boolean.force_particle.name=生成
aspect.aspecttypes.integrateddynamics.boolean.strong_power.info=如果一个需要被激活的红石火把而不是普通的红石粉
aspect.aspecttypes.integrateddynamics.integer.pulse_emit_value.name=Pulse Value
aspect.aspecttypes.integrateddynamics.integer.pulse_emit_value.info=The pulse value that should be emitted.
operator.operators.integrateddynamics.name=运算符
operator.integrateddynamics.applied.type=§执行于: §r%s
operator.integrateddynamics.tooltip.operator_category=§e类别: §r%s
operator.integrateddynamics.tooltip.variable_ids=§e变量 IDs: §r§o%s
operator.integrateddynamics.tooltip.input_type_name=§e输入类型 %s: §r%s
operator.integrateddynamics.tooltip.output_type_name=§e输出类型: §r%s
operator.integrateddynamics.error.wrong_input_length=运算符%s获得一个长度为%s的输入栏（当它需要%s长度时）。
operator.integrateddynamics.error.null_type=运算符%s在%s位置获得一个null变量的输入栏。
operator.integrateddynamics.error.wrong_type=运算符%s获得一个%s类型的位于%s的输入栏（当%s类型被需要时）。
operator.integrateddynamics.error.wrong_currying_type=运算符%s获得一个%s类型的位于%s的输入栏（当%s类型当前被需要时）。
operator.integrateddynamics.error.wrong_predicate=运算符%s获得一个输入运算符，该运算符会输出%s类型（当%s类型被需要时）。
operator.integrateddynamics.error.illegal_property=该属性将输出%s,（当%s被发现用于运算符%s时）。
operator.integrateddynamics.error.variable_not_in_network=在当前网络中无法找到ID为%s的变量。
operator.integrateddynamics.error.cyclic_reference=ID为%s的变量取决于自身，无限递归。
operator.operators.integrateddynamics.integer.basename=整形%s运算
operator.operators.integrateddynamics.relational.name=Relational
operator.operators.integrateddynamics.relational.basename=关联%s运算
operator.operators.integrateddynamics.relational.equals.name=相等
operator.operators.integrateddynamics.string.length.info=给定字符串的长度
operator.operators.integrateddynamics.string.contains.name=String Contains
operator.operators.integrateddynamics.string.contains.info=If the given substring is contained within the given string.
operator.operators.integrateddynamics.string.contains_regex.name=Contains Regex
operator.operators.integrateddynamics.string.contains_regex.info=If the regular expression given matches any substring of the given string.
operator.operators.integrateddynamics.string.matches_regex.name=Matches Regex
operator.operators.integrateddynamics.string.matches_regex.info=If the regular expression given matches the given string.
operator.operators.integrateddynamics.string.index_of.name=Index Of
operator.operators.integrateddynamics.string.index_of.info=Get the index of the first occurrence of a substring matching the search term in the given string.
operator.operators.integrateddynamics.string.index_of_regex.name=Index Of Regex
operator.operators.integrateddynamics.string.index_of_regex.info=Get the index of the first occurrence of a substring matching the pattern in the given string.
operator.operators.integrateddynamics.string.starts_with.name=Starts With
operator.operators.integrateddynamics.string.starts_with.info=If the given substring matches the start of the given string.
operator.operators.integrateddynamics.string.ends_with.name=Ends With
operator.operators.integrateddynamics.string.ends_with.info=If the string given matches the end of the given string.
operator.operators.integrateddynamics.string.split_on.name=Split On
operator.operators.integrateddynamics.string.split_on.info=Get a list containing pieces, split on the given (literal) delimiter, of the given string.
operator.operators.integrateddynamics.string.split_on_regex.name=Split On Regex
operator.operators.integrateddynamics.string.split_on_regex.info=Get a list containing pieces, split on the given regular expression, of the given string.
operator.operators.integrateddynamics.string.substring.name=Substring
operator.operators.integrateddynamics.string.substring.info=Get a substring, from the given index (inclusive) to the given index (exclusive), of the given string.
operator.operators.integrateddynamics.string.regex_group.name=Regex Group
operator.operators.integrateddynamics.string.regex_group.info=Search for the given regular expression and return in that match the group at the given index, in the given string.
operator.operators.integrateddynamics.string.regex_groups.name=Regex Groups
operator.operators.integrateddynamics.string.regex_groups.info=Search for the given regular expression and return in that match a list of all its groups, in the given string.
operator.operators.integrateddynamics.string.regex_scan.name=Regex Scan
operator.operators.integrateddynamics.string.regex_scan.info=Search for all matches of the given regular expression and return the group at the given index, in the given string.
operator.operators.integrateddynamics.string.replace.name=Replace
operator.operators.integrateddynamics.string.replace.info=Find all instances of the search term and replace them with the given string, in the given string.
operator.operators.integrateddynamics.string.replace_regex.name=Replace Regex
operator.operators.integrateddynamics.string.replace_regex.info=Find all matches of the search pattern and replace them with the given string, in the given string.
operator.operators.integrateddynamics.string.name.name=命名
operator.operators.integrateddynamics.string.name.info=获取被命名物体的名字
operator.operators.integrateddynamics.string.unique_name.name=唯一名称
operator.operators.integrateddynamics.string.unique_name.info=获取一个东西的名称
operator.operators.integrateddynamics.list.length.info=给定列表的长度
operator.operators.integrateddynamics.list.get_or_default.name=获取或默认
operator.operators.integrateddynamics.list.get_or_default.info=在指定地址获取列表元素，如果该元素不可用，则返回默认值。
operator.operators.integrateddynamics.list.contains.info=此列表是否包含给定元素
operator.operators.integrateddynamics.list.contains_p.name=包含条件
operator.operators.integrateddynamics.list.contains_p.info=如果列表的至少一个元素对于给定的条件返回true。
operator.operators.integrateddynamics.list.count.info=指定元素在列表中被找到的次数
operator.operators.integrateddynamics.list.count_p.name=条件计数
operator.operators.integrateddynamics.list.count_p.info=指定条件对列表中的元素返回为ture的次数。
operator.operators.integrateddynamics.list.append.info=为指定列表附加指定物品。
operator.operators.integrateddynamics.list.concat.name=连接
operator.operators.integrateddynamics.list.concat.info=相互连接两个列表。
operator.operators.integrateddynamics.list.lazybuilt.name=懒人列表构建器
operator.operators.integrateddynamics.list.lazybuilt.info=构建一个列表，使用起始值和执行了前一个元素的运算符来获取下一个元素。
operator.operators.integrateddynamics.list.head.info=获取给定列表的第一个元素。
operator.operators.integrateddynamics.list.uniq_p.info=基于给定的比较条件删除列表中所有的重复元素。
operator.operators.integrateddynamics.list.slice.info=将给定列表的子集从给定索引（包括）移到给定索引（不包括）。
operator.operators.integrateddynamics.block.opaque.info=给定的方块是否不透明
operator.operators.integrateddynamics.block.itemstack.info=给定方块代表的物品
operator.operators.integrateddynamics.block.mod.name=Mod
operator.operators.integrateddynamics.block.mod.info=给定方块对应的mod名称
operator.operators.integrateddynamics.block.breaksound.info=给定方块被破坏的声音
operator.operators.integrateddynamics.block.placesound.info=给定方块被放置的声音
operator.operators.integrateddynamics.block.stepsound.info=在给定方块上行走的声音
operator.operators.integrateddynamics.block.isshearable.name=方块可剪切
operator.operators.integrateddynamics.block.isshearable.info=如果指定方块可剪切
operator.operators.integrateddynamics.block.isplantable.name=方块为植物
operator.operators.integrateddynamics.block.isplantable.info=如果指定方块是植物
operator.operators.integrateddynamics.block.planttype.name=方块植物类型
operator.operators.integrateddynamics.block.plant.name=方块植物
operator.operators.integrateddynamics.block.plant.info=当该方块被种植时，得到的方块
operator.operators.integrateddynamics.block.cansustainplantblock.name=方块能支持方块植物
operator.operators.integrateddynamics.block.cansustainplantblock.info=如果指定的方块能支持指定的方块植物
operator.operators.integrateddynamics.block.cansustainplantitem.name=方块可支持物品植物
operator.operators.integrateddynamics.block.cansustainplantitem.info=如果指定的方块能支持指定的物品植物
operator.operators.integrateddynamics.block.plantage.name=方块植物生长阶段
operator.operators.integrateddynamics.block.plantage.info=指定方块植物的生长阶段
operator.operators.integrateddynamics.block.blockbyname.name=方块名称
operator.operators.integrateddynamics.block.blockbyname.info=获取对应指定名称的方块，添加空格+数字 显示metadata。
operator.operators.integrateddynamics.itemstack.maxsize.info=当前物品栈物品数量上限
operator.operators.integrateddynamics.itemstack.stackable.name=堆叠
operator.operators.integrateddynamics.itemstack.stackable.info=物品栈能否存放两个及以上物品
operator.operators.integrateddynamics.itemstack.damageable.name=损害
operator.operators.integrateddynamics.itemstack.damageable.info=物品能被损坏
operator.operators.integrateddynamics.itemstack.damage.name=耐久值
operator.operators.integrateddynamics.itemstack.damage.info=当前物品的耐久值
operator.operators.integrateddynamics.itemstack.maxdamage.name=耐久值上限
operator.operators.integrateddynamics.itemstack.maxdamage.info=物品耐久值上限
operator.operators.integrateddynamics.itemstack.enchanted.name=附魔
operator.operators.integrateddynamics.itemstack.enchanted.info=物品是否被附魔
operator.operators.integrateddynamics.itemstack.enchantable.info=物品能否被附魔
operator.operators.integrateddynamics.itemstack.strength.name=强度比较
operator.operators.integrateddynamics.itemstack.strength.info=该物品与给定的强度比较
operator.operators.integrateddynamics.itemstack.canharvest.info=该物品能否采集给定方块
operator.operators.integrateddynamics.itemstack.block.info=给定物品对应的方块
operator.operators.integrateddynamics.itemstack.isfluidstack.name=有流体
operator.operators.integrateddynamics.itemstack.isfluidstack.info=给定物品中有流体
operator.operators.integrateddynamics.itemstack.fluidstack.info=给定物品中对应的流体
operator.operators.integrateddynamics.itemstack.fluidstackcapacity.name=流体容量
operator.operators.integrateddynamics.itemstack.fluidstackcapacity.info=给定物品的容量(mB)
operator.operators.integrateddynamics.itemstack.isnbtequal.name=NBT相同
operator.operators.integrateddynamics.itemstack.isnbtequal.info=给定物品NBT标签是否相同
operator.operators.integrateddynamics.itemstack.isitemequalnonbt.name=物品完全相同(不含NBT)
operator.operators.integrateddynamics.itemstack.isitemequalnonbt.info=给定的物品是否相等,忽略nbt但包括耐久值
operator.operators.integrateddynamics.itemstack.israwitemequal.name=物品相同
operator.operators.integrateddynamics.itemstack.israwitemequal.info=给定的物品是否相等,忽略nbt和耐久值
operator.operators.integrateddynamics.itemstack.mod.name=Mod
operator.operators.integrateddynamics.itemstack.mod.info=给定物品对应的mod名称
operator.operators.integrateddynamics.itemstack.burntime.info=给定物品的燃烧时间(tick)
operator.operators.integrateddynamics.itemstack.canburn.name=是否燃料
operator.operators.integrateddynamics.itemstack.canburn.info=给定物品是否可用作燃料
operator.operators.integrateddynamics.itemstack.cansmelt.name=是否可烧
operator.operators.integrateddynamics.itemstack.cansmelt.info=给定物品是否可被烧制
operator.operators.integrateddynamics.itemstack.oredict.info=给定物品的矿物字典名
operator.operators.integrateddynamics.string.oredict.info=注册为给定矿物字典名的物品
operator.operators.integrateddynamics.itemstack.hasinventory.name=物品带为容器
operator.operators.integrateddynamics.itemstack.hasinventory.info=如果指定的物品带有物品栏
operator.operators.integrateddynamics.itemstack.inventorysize.name=容器的物品栏容量
operator.operators.integrateddynamics.itemstack.inventorysize.info=检索给定容器可管理的物品栏大小
operator.operators.integrateddynamics.itemstack.inventory.name=容器的物品栏
operator.operators.integrateddynamics.itemstack.inventory.info=检索给定容器可管理的物品栏内容
operator.operators.integrateddynamics.itemstack.withsize.info=设置给定物品的堆叠大小
operator.operators.integrateddynamics.itemstack.plant.name=物品种植
operator.operators.integrateddynamics.itemstack.plant.info=物品种植后得到的方块
operator.operators.integrateddynamics.itemstack.itembyname.name=物品名称
operator.operators.integrateddynamics.itemstack.itembyname.info=根据指定名称名称获取物品 , 添加空格+数字显示metadata。
operator.operators.integrateddynamics.itemstack.itemlistcount.name=物品列表计数
operator.operators.integrateddynamics.itemstack.itemlistcount.info=在列表中获取完整的指定物品的总物品数。
operator.operators.integrateddynamics.itemstack.nbt.name=物品NBT
operator.operators.integrateddynamics.itemstack.nbt.info=获得指定物品的NBT标签。
operator.operators.integrateddynamics.entity.isminecart.name=Is Minecart
operator.operators.integrateddynamics.entity.isminecart.info=If the entity is a minecart
operator.operators.integrateddynamics.entity.targetentity.info=实体视线方向的实体
operator.operators.integrateddynamics.entity.hasguiopen.info=给定玩家是否开着GUI
operator.operators.integrateddynamics.entity.helditemoffhand.name=暂时搁置物品
operator.operators.integrateddynamics.entity.helditemoffhand.info=指定实体当前持有的物品在其中。
operator.operators.integrateddynamics.entity.itemframecontents.info=给定物品展示框的内容
operator.operators.integrateddynamics.entity.itemframerotation.info=给定物品展示框内物品的旋转情况
operator.operators.integrateddynamics.entity.hurtsound.info=给定实体受伤的声音
operator.operators.integrateddynamics.entity.deathsound.info=给定实体死亡的声音
operator.operators.integrateddynamics.entity.age.name=实体生长阶段
operator.operators.integrateddynamics.entity.age.info=如果指定实体生长阶段
operator.operators.integrateddynamics.entity.ischild.name=实体为幼年
operator.operators.integrateddynamics.entity.ischild.info=如果指定实体处于幼年期
operator.operators.integrateddynamics.entity.canbreed.name=实体可繁殖
operator.operators.integrateddynamics.entity.canbreed.info=如果指定实体准备进行交配
operator.operators.integrateddynamics.entity.isinlove.name=实体正在交配
operator.operators.integrateddynamics.entity.isinlove.info=如果实体正在交配准备繁殖
operator.operators.integrateddynamics.entity.canbreedwith.name=实体可被喂养
operator.operators.integrateddynamics.entity.canbreedwith.info=如果指定实体可被指定物品喂养并繁殖
operator.operators.integrateddynamics.entity.isshearable.name=实体可裁剪
operator.operators.integrateddynamics.entity.isshearable.info=如果指定实体可被裁剪
operator.operators.integrateddynamics.entity.nbt.name=实体NBT
operator.operators.integrateddynamics.entity.nbt.info=获取指定的实体NBT。
operator.operators.integrateddynamics.entity.entitytype.name=实体类型
operator.operators.integrateddynamics.entity.entitytype.info=实体类型名称。
operator.operators.integrateddynamics.entity.entityitems.name=Entity Items
operator.operators.integrateddynamics.entity.entityitems.info=The items that are contained within this entity.
operator.operators.integrateddynamics.entity.entityfluids.name=Entity Fluids
operator.operators.integrateddynamics.entity.entityfluids.info=The fluids that are contained within this entity.
operator.operators.integrateddynamics.entity.entityenergystored.name=Entity Energy Stored
operator.operators.integrateddynamics.entity.entityenergystored.info=The amount of energy that is stored in this entity.
operator.operators.integrateddynamics.entity.entityenergycapacity.name=Entity Energy Capacity
operator.operators.integrateddynamics.entity.entityenergycapacity.info=The energy capacity of this entity.
operator.operators.integrateddynamics.itemstack.isfecontainer.info=如果给定的物品可以保存FE
operator.operators.integrateddynamics.itemstack.storedfe.info=存储在此物品中的FE量
operator.operators.integrateddynamics.itemstack.fecapacity.info=可以存储在此物品中的最大FE数量
operator.operators.integrateddynamics.fluidstack.mod.info=流体对应的mod
operator.operators.integrateddynamics.fluidstack.nbt.name=流体NBT
operator.operators.integrateddynamics.fluidstack.nbt.info=获得指定流体的NBT标签。
operator.operators.integrateddynamics.nbt.name=NBT
operator.operators.integrateddynamics.nbt.size.info=指定NBT标签内的条目数量
operator.operators.integrateddynamics.nbt.keys.name=NBT关键字
operator.operators.integrateddynamics.nbt.keys.info=指定NBT标签内的关键字列表
operator.operators.integrateddynamics.nbt.haskey.name=NBT有关键字
operator.operators.integrateddynamics.nbt.haskey.info=如果指定的NBT标签含有指定的关键字
operator.operators.integrateddynamics.nbt.type.name=NBT条目类型
operator.operators.integrateddynamics.nbt.type.info=指定NBT标记中与指定关键字对应的数据类型
operator.operators.integrateddynamics.nbt.valueBoolean.name=NBT数据：布尔值
operator.operators.integrateddynamics.nbt.valueBoolean.info=指定NBT标签中的指定关键字的布尔值
operator.operators.integrateddynamics.nbt.valueInteger.name=NBT数据：整型
operator.operators.integrateddynamics.nbt.valueInteger.info=指定NBT标签中指定关键字的整型数值
operator.operators.integrateddynamics.nbt.valueLong.name=NBT数据：长整型
operator.operators.integrateddynamics.nbt.valueLong.info=指定NBT标签中指定关键字的长整型数值
operator.operators.integrateddynamics.nbt.valueDouble.name=NBT数据：双精度浮点型
operator.operators.integrateddynamics.nbt.valueDouble.info=指定NBT标签中指定关键字的双精度浮点型数值
operator.operators.integrateddynamics.nbt.valueString.name=NBT数据：字符串
operator.operators.integrateddynamics.nbt.valueString.info=指定NBT标签中指定关键字的字符串数值
operator.operators.integrateddynamics.nbt.valueTag.name=NBT数据：NBT
operator.operators.integrateddynamics.nbt.valueTag.info=指定NBT标签中指定关键字的NBT数值
operator.operators.integrateddynamics.nbt.valueListTag.name=NBT数据：列表NBT
operator.operators.integrateddynamics.nbt.valueListTag.info=指定NBT标签中指定关键字的NBT列表数值
operator.operators.integrateddynamics.nbt.valueListByte.name=NBT数据：字节数组
operator.operators.integrateddynamics.nbt.valueListByte.info=指定定NBT标签中的字节数组，其中指定的关键字为整数列表
operator.operators.integrateddynamics.nbt.valueListInt.name=NBT数据：整型数组
operator.operators.integrateddynamics.nbt.valueListInt.info=带有指定关键字为整型列表的NBT标签的整型数组
operator.operators.integrateddynamics.nbt.without.name=不包含xxx的NBT
operator.operators.integrateddynamics.nbt.without.info=获取不带有指定关键字的指定NBT标签
operator.operators.integrateddynamics.nbt.withBoolean.name=带有布尔值的NBT
operator.operators.integrateddynamics.nbt.withBoolean.info=获取带有指定布尔值条目的指定NBT标签
operator.operators.integrateddynamics.nbt.withShort.name=带有短整型的NBT
operator.operators.integrateddynamics.nbt.withShort.info=获取带有指定短整型条目的指定NBT标签
operator.operators.integrateddynamics.nbt.withInteger.name=带有整型的NBT
operator.operators.integrateddynamics.nbt.withInteger.info=获取带有指定整型条目的指定NBT标签
operator.operators.integrateddynamics.nbt.withLong.name=带有长整型的NBT
operator.operators.integrateddynamics.nbt.withLong.info=获取带有指定长整型条目的指定NBT标签
operator.operators.integrateddynamics.nbt.withDouble.name=带有双精度浮点型的NBT
operator.operators.integrateddynamics.nbt.withDouble.info=获取带有指定双精度浮点型条目的指定NBT标签
operator.operators.integrateddynamics.nbt.withFloat.name=带有浮点型的NBT
operator.operators.integrateddynamics.nbt.withFloat.info=获取带有指定浮点型条目的指定NBT标签
operator.operators.integrateddynamics.nbt.withString.info=获取带有指定字符串条目的指定NBT标签
operator.operators.integrateddynamics.nbt.withTag.name=带有 的NBTNBT
operator.operators.integrateddynamics.nbt.withTag.info=获取带有指定NBT条目的指定NBT标签
operator.operators.integrateddynamics.nbt.withListTag.name=带有NBT列表的NBT
operator.operators.integrateddynamics.nbt.withListTag.info=获取带有指定NBT列表条目的指定NBT标签
operator.operators.integrateddynamics.nbt.withListByte.name=带有字节列表的NBT
operator.operators.integrateddynamics.nbt.withListByte.info=获取带有指定字节列表的指定NBT标签
operator.operators.integrateddynamics.nbt.withListInt.name=带有整型列表的NBT
operator.operators.integrateddynamics.nbt.withListInt.info=获取带有指定整型列表的指定NBT标签
operator.operators.integrateddynamics.nbt.withListLong.name=带有长整型列表的NBT
operator.operators.integrateddynamics.nbt.withListLong.info=获取带有指定长整型列表条目的指定NBT标签
operator.operators.integrateddynamics.operator.apply.name=执行
operator.operators.integrateddynamics.operator.apply.info=为指定运算符执行一个指定的变量。
operator.operators.integrateddynamics.operator.apply2.name=执行 2
operator.operators.integrateddynamics.operator.apply2.info=为指定运算符执行两个指定的变量。
operator.operators.integrateddynamics.operator.apply3.name=执行 3
operator.operators.integrateddynamics.operator.apply3.info=为指定运算符执行三个指定的变量。
operator.operators.integrateddynamics.operator.map.name=Map
operator.operators.integrateddynamics.operator.map.info=为指定运算符执行所有列表上的元素，得到执行后的新的变量列表。
operator.operators.integrateddynamics.operator.filter.info=用给定的断言过滤元素列表
operator.operators.integrateddynamics.operator.conjunction.info=结合两个条件。
operator.operators.integrateddynamics.virtual.p_conjunction.name=条件连接
operator.operators.integrateddynamics.operator.disjunction.info=取消两个条件的分离。
operator.operators.integrateddynamics.virtual.p_disjunction.name=条件分离
operator.operators.integrateddynamics.virtual.p_negation.name=条件否定
operator.operators.integrateddynamics.operator.flip.name=翻动
operator.operators.integrateddynamics.virtual.flipped.name=翻转
operator.operators.integrateddynamics.operator.reduce.info=将给定的运算符执行于列表的所有元素，以将列表减少为一个值。
operator.operators.integrateddynamics.operator.byName.name=名称运算符
operator.operators.integrateddynamics.operator.byName.info=获得拥有指定唯一名称的运算符。
operator.operators.integrateddynamics.general.isnull.info=给定的值是否为空
operator.operators.integrateddynamics.general.isnotnull.info=给定的值是否非空
operator.operators.integrateddynamics.virtual.p_conjunction.name=条件连接
operator.operators.integrateddynamics.virtual.p_conjunction.info=两个条件的结合
operator.operators.integrateddynamics.virtual.p_disjunction.name=条件分离
operator.operators.integrateddynamics.virtual.p_disjunction.info=两个条件的分离
operator.operators.integrateddynamics.virtual.p_negation.name=条件否定
operator.operators.integrateddynamics.virtual.p_negation.info=条件的分离
operator.operators.integrateddynamics.cast.name=投
operator.operators.integrateddynamics.cast.basename=投
operator.operators.integrateddynamics.cast.tooltip=投%s入%s
config.integrateddynamics.biome_meneglin=门勒格林
config.integrateddynamics.biome_meneglin.spawnWeight=门勒格林生成权重
config.integrateddynamics.general.cacheCableModels=缓存电缆型号
config.integrateddynamics.menrilBerries.nightVision=门瑞欧浆果（夜间版本）
config.integrateddynamics.charsetpipes=字符串管道
config.integrateddynamics.cofhapi=RF API
config.integrateddynamics.jei=JEI
config.integrateddynamics.forestry=Forestry支持
config.integrateddynamics.mcmultipart=MCMultiPart支持
config.integrateddynamics.refinedstorage=Refined Storage支持
config.integrateddynamics.tconstruct=Tinkers' Construct支持
config.integrateddynamics.tesla=Tesla支持
config.integrateddynamics.theoneprobe=The One Probe支持
config.integrateddynamics.Waila=Waila支持
config.integrateddynamics.general.wildMenrilTreeChance=Wild 门瑞欧树生成概率
config.integrateddynamics.menrilLogFilled.filledMenrilLogChance=Enriched 门瑞欧原木生成概率
info_book.integrateddynamics.section.main=论集成动力
info_book.integrateddynamics.introduction.text1=长久以来,自动化的自由度太有限了。&1集成动力&0旨在让你的逻辑系统更加的智能化。它为你提供了其最具有代表性的沉浸逻辑编程体验，并且支持大部分&lMinecraft&r和模组里的要素。
info_book.integrateddynamics.introduction.text2=红石电路一直以来是MC中最基础的,也是最简单易懂的自动化途径。然而归根结底，它并不方便。如果想要构建一个高度复杂的自动化网络,红石系统必定会非常的庞大，并且难以设计。更要命的是，如果你手残泼了一桶水，它也许能会毁掉你的整个红石系统。
info_book.integrateddynamics.introduction.text3=这本书的目的有两个。其一，作为一本&l教程&r，它能让你方便的学习关于该mod的方方面面。其二,它也为那些对教程不感兴趣的玩家准备了一个详细&l菜单&r，它记录了该mod中所有机器和物品的信息和合成表。
info_book.integrateddynamics.introduction.text4=手册底部的箭头用于翻页, 按住shift点击翻过整个当前部分内容。在主目录中，您将看到内容一览表，其中包含到各个子目录的超链接，便于快速查阅。如果指南内的合成表里含有本书中已解释的物品可以通过点击它来进行快速的查阅。本书左上方的点状按钮用于返回上级目录。右上角的按钮能让你返回到最近访问过的页面。
info_book.integrateddynamics.tutorials.menrilBasics.text1=开始该mod之前,你需要找到一些&l门瑞欧树&r，在&l门勒格林&r群系能很容易的找到。
info_book.integrateddynamics.tutorials.menrilBasics.text2=接下来,做一个&l挤压机&r和&l烘干池&r来加工&l门瑞欧原木&r。方法很简单，将原木右键放进挤压机里，并站在&l挤压机&r上方反复跳跃直至机器中的原木被压扁。&l挤压机&r中压榨出的&l门瑞欧树脂&r将试图导入其两侧的液体容器中。然后,在&l挤压机&r带有液体渠道的一侧放置一个&l烘干池&r。使挤压出的&l门瑞欧树脂&r导入到烘干池内。
info_book.integrateddynamics.tutorials.menrilBasics.text3=如果想要重复此步骤,给予&l挤压机&r一个红石脉冲，便可重置。
info_book.integrateddynamics.tutorials.menrilBasics.text4=In the future, you will also be able to craft upgraded variants of these machines that are more easily automatable, but are more costly: the &lMechanical Squeezer&r and the &lMechanical Drying Basin&r.
info_book.integrateddynamics.tutorials.networkFoundations.text1=本mod的主要目的就是构建一个可控制的自动化网络，通过&l逻辑线缆&r来实现。试着用10来根这样的逻辑线缆来搭建一个网络吧。
info_book.integrateddynamics.tutorials.networkFoundations.text2=下一步需要做一些&l变量卡&r和&l变量转换器&r。&l变量卡&r用来存储网络从世界中调用变量。&l变量转换器&r可以合成一系列可贴附在逻辑线缆上的组件，用于输入和输出各种类型的变量值。
info_book.integrateddynamics.tutorials.basicNetworkComponents.text1=为&l变量卡&r存入特定变量值的一种方法是：从&l读取器&r中导入。去做一些基础读取器吧。顺便,再做一个&l显示面板&r,他能够方便的显示&l变量卡&r的变量值。
info_book.integrateddynamics.tutorials.aspects.text1=举个简单的例子,我们来读取一个红石信号的变量值并将它显示出来吧。
info_book.integrateddynamics.tutorials.aspects.text2=将&l红石读取器&r接到&l逻辑线缆&r上。确保读取的目标是红石变量,如&l红石火把&r。
info_book.integrateddynamics.tutorials.aspects.text3=接下来,右击打开&l红石读取器&r的界面,将&l变量卡&r插入&6整形&0&l红石信号等级&r设置面的插槽里。现在，目标的红石变量值导入到了&l变量卡&r上。
info_book.integrateddynamics.tutorials.aspects.text4=然后，在该&l红石读取器&r所在的网络上接上一个&l显示面板&r，右键打开它，插入刚才存有变量值的&l变量卡&r即可在面板上显示它的变量值。
info_book.integrateddynamics.tutorials.aspects.text5=下一步,做一个&l红石输出器&r，插上变量卡，试着让它输出一个的红石信号。
info_book.integrateddynamics.tutorials.logicOperations.text1=当读取器上显示的变量可用时,你可以将不同的变量通过&2运算符&0结合起来，这一定会非常有趣。所有的&2运算符&0可以在&l逻辑编程器&r中找到。
info_book.integrateddynamics.tutorials.logicOperations.text2=首先你需要做一个&l逻辑编程器&r,它拥有物品和方块两种存在形式（可通合成来切换）。右键打开界面可在列表中查看所有的&l运算符&r。
info_book.integrateddynamics.tutorials.logicOperations.text3=接下来，搜索找到&6整型&0运算符并点击它。右边界面会切换到一个需要你输入数字的窗口。输入你想要的数字后, 插入一个空白的&l变量卡&r来导入你设置的&6整型&0变量。设置完后，重复此步骤再设置一个不同的&6整型&0变量卡。
info_book.integrateddynamics.tutorials.logicOperations.text4=最后,搜索&l加&r（+）运算符并打开它。显示让你相加两个&e数字&0。插入2张之前写好的&6整型&0 &l变量卡&r，并在左下角的插槽内放入新的&l变量卡&r来存储它们相加后的变量。
info_book.integrateddynamics.tutorials.logicOperations.text5=&1集成电路&0 是以一种较为&o懒&r的方式来检测变量的,&l加&r&l变量卡&r不会直接包含这些&6整型&0的相加值,相加的变量只会在被网络调用后才能表现出来。因此，如果想要表现运算后的变量，你需要为此网络提供运算后的&l变量卡&r所调用的所有变量。所以,你需要做一个&l变量卡箱&r。将这两张参与过运算的&6整型&0&l变量卡&r插入变量卡箱中来使运算后的变量卡在网络中生效。
info_book.integrateddynamics.tutorials.logicOperations.text6=现在我们来实际操作一遍，在&l变量卡箱&r上连接逻辑线缆，并在线缆上贴上一个&l显示面板&r,插入进行过&l加&r运算的&l变量卡&r，此时面板上显示“X”图案，并提示网络中找不到调用的变量。然后，你需要将之前参与&l加&r运算的两张&6整型&0&l变量卡&r放入变量卡箱内，再看看显示面板是否显示出了你期望的数值。
info_book.integrateddynamics.tutorials.advancedNetworkComponents.text2=你肯定记得,&l逻辑编程器&r使你能够创建&o静态&r的变量,或者可以通过与&o动态&r变量结合创建更多复杂的变量。
info_book.integrateddynamics.tutorials.advancedNetworkComponents.text3=&l复制器&r能帮你把&o动态&r变量转换成&o静态&r变量。将&o动态&r&l变量卡&r插入到&l复制器&r顶部的插槽内。每个插入左槽的&l变量卡&r,将会记录顶槽动态变量卡当前时刻的变量。
info_book.integrateddynamics.tutorials.advancedNetworkComponents.text4=&l代理器&r能让你为变量添加一个额外的间接级别。例如你目前有一个逻辑程序需要一个&o静态&r变量。如果在将来的某个时候,你想改变这个变量,你得重写你的程序,除非那个变量是&l动态&r的,在这种情况下你只需要在&l代理器&r获得该变量卡的复制品，代理的变量卡可放在多处同时使用也可以在原来的基础上进一步改进。
info_book.integrateddynamics.tutorials.advancedNetworkComponents.text5=接下来,制作复制器和代理器吧。
info_book.integrateddynamics.tutorials.advancedOperations.text1=之前查询运算符时你可能已经注意到了,&l逻辑编程器&r的功能不仅仅只是相加数字那么简单。该教程中,我们将研究更先进的变量结构和链状运算符。
info_book.integrateddynamics.tutorials.advancedOperations.text2=尝试创建一个含有&61&0，&610&0，&6100&0的静态&6整型&0&7列表&0变量。导入变量卡，并在&l显示面板&r上展示它。
info_book.integrateddynamics.tutorials.advancedOperations.text3=尝试创建一个静态&7物品&0变量：&6圆石&0。导入&l变量卡&r,并在&l显示面板&r上展示它。
info_book.integrateddynamics.tutorials.advancedOperations.text4=记住你只能用&l变量卡箱&r来储存需要调用的变量。
info_book.integrateddynamics.tutorials.advancedOperations.text5=对于本教程的最后一部分,我们将结合运算符来使用动态变量。在网络中接上一个&l实体读取器&r，并让它读取一个实体。在读取器中&7实体&0设置面插上变量卡导出变量,在逻辑编辑器列表中找到并点开目标方块运算符，插槽中放上&7实体&0变量卡，并将导出的变量卡插入&l显示面板&r，即可显示实体读取器读取的目标实体视线方向所看到的方块。
info_book.integrateddynamics.tutorials.theValueOfOperators=运算符的变量
info_book.integrateddynamics.tutorials.theValueOfOperators.text1=在&1集成动力&0中,&2运算符&0处于头等地位。目前为止，我们只是在手动的使用&l逻辑编程器&r,但在这次教程中,我们将研究如何以动态的的方式使用它们,将&2运算符&0存入&l变量卡&r中,并动态地调用他们。
info_book.integrateddynamics.tutorials.theValueOfOperators.text2=首先，打开&l逻辑编辑器&r，创建一个静态的&2运算符&0：找到&2Operator（运算符）&0，在右边的搜索栏找到&o加运算符&r并写入到&l变量卡&r里，然后，做两张&6整型&0的变量卡。接下来在逻辑编辑器里找到 &o执行（Apply）&r，用存有&o加运算符&r的变量卡标记第一个槽，&6整型&0变量卡标记第二个槽，然后取得存有加法运算和一个数字的变量卡，若要完成一个加法运算，需要进一步给它添加一个整型变量，重复之前的apply步骤，将刚取得的变量卡放入第一个槽，另一个&6整型&0变量卡放入第二个槽，最后用变量卡存储其结果。将最终的变量卡插入&l显示面板&r验证相加的值（别忘了为网络提供所需要调用的变量卡）。
info_book.integrateddynamics.tutorials.theValueOfOperators.text3=接下来要开始执行&2运算符&0了,这里还有许多其他高级的&2运算符&0操作。我们现在将继续研究使用主&7列表&0上的&2运算符&0中的过滤运算符，&o过滤&r&2运算符&0需要用到一个&7列表&0和一个&o条件&r(只有一个输入位和一个&9布尔&0值得输出位)。 &2第一步&0，创建一个含有&6整型&0&61&0,&610&0，&6100&0的&7列表&0。 &2第二步&0,将&o关联相等&r&2运算符&0存储到变量卡中。 &2第三步&0,打开执行界面，用该运算符执行&6整型&0&610&0。 &2第四步&0，打开主列表中的过滤界面左槽放上带有整型10的&o关联相等&r&2运算符&0的变量卡，右槽放上列表变量卡。这将通过在给定的运算符上执行它们来过滤掉&7列表&0中返回值为&9False&0的所有元素，在这种情况下，这意味着所有不等于&610&0的元素将从列表中移除。所以将它在放在&l显示面板&r上时，只会显示列表中的整型“10”。
info_book.integrateddynamics.tutorials.theValueOfOperators.text4=&2运算符&0有很多其他的操作,例如组合&o条件&r，翻转&2运算符&0参数，以及关于&7列表&0的更多操作......
info_book.integrateddynamics.tutorials.challenges.text1=本最终教程部分包含几个非常微不足道的挑战，来验证您是否掌握了&1集成动力&0的基础知识。关于每个挑战，我不会再教你你一步步该怎么做了，自己领悟。期待你的奋战！
info_book.integrateddynamics.manual.prerequisites.menril_trees.text1=在探索世界的过程中，你偶尔会遇到一些高大的蓝色树木。这些树叫做&l门瑞欧树&r,它们有一些非常有趣的属性。其一,它们的叶子会发光，这是由于浆果中含有的荧光物质导致的，还有它非常的好吃！其二, 色质较为特别的门瑞欧原木包含大量的树脂，可用于制作这个MOD中的大部分内容。
info_book.integrateddynamics.manual.prerequisites.meneglin_biome.text1=可能有些时候&l门瑞欧树&r很难找到。但幸运的是,本mod为此增加了一个生物群系：&l门勒格林&r。它是门瑞欧树茁壮生长的群系。大量的门瑞欧树使得该群系看起来很蓝,这是因为树木中的&l门瑞欧树脂&r被释放到了环境中。
info_book.integrateddynamics.manual.prerequisites.squeezer.text1=&l挤压机&r是一个早期的游戏机器，可以让你跳跃在方块块和物品上，以打破或挤压它们。 不仅玩家，任何一种实体都可以在它上面跳跃来完成挤压过程。挤压的产物会导入相邻的容器或掉落在地上。产生的液体将保留在挤压机中，并且将试图从带有液体渠道的一侧导入到液体容器中。挤压机的压板可以启用红石脉冲来重置它。在本mod中最主要的用处是，用来挤压&l门瑞欧原木&r，来获得&l门瑞欧树脂&r。
info_book.integrateddynamics.manual.prerequisites.drying_basin=烘干池
info_book.integrateddynamics.manual.prerequisites.drying_basin.text1=干燥方块和物品可以用&l烘干池&r完成。例如，当您希望让您的&l门瑞欧树脂&r干燥成&l门瑞欧水晶&r时，这可能是有用的。
info_book.integrateddynamics.manual.networks.text1=&l集成动力&r&l网络&r是一切自动化系统的基础。网络由相互连接的&l逻辑线缆&r和其链接的IO组件构成。这些线缆可以通过&l扳手&r进行管理。右键断开与其他电缆的连接，Shift+右键将其拆卸。
info_book.integrateddynamics.manual.networks.text2=尽管&l逻辑线缆&r的材质看起来不错，在某些情况下，你仍然想要隐藏它们。你可以使用&l伪装块&r将它伪装成任何材质。此外，这些电缆也与&lMC MultiPart&r兼容，这意味着您可以将电缆隐藏在更复杂的逻辑门结构中。
info_book.integrateddynamics.manual.logic.value_types=变量类型
info_book.integrateddynamics.manual.logic.value_types.boolean=布尔
info_book.integrateddynamics.manual.logic.value_types.boolean.text1=最简单的变量类型,其变量值可以是&9True&0或者&9False&0.
info_book.integrateddynamics.manual.logic.value_types.integer=整型
info_book.integrateddynamics.manual.logic.value_types.integer.text1=用于表示正整数和负整数的变量类型。例如&6-20&0,&60&0,&61000&0,&6333&0...
info_book.integrateddynamics.manual.logic.value_types.integer.text3=该变量类型是&l数字&r类别的一部分。
info_book.integrateddynamics.manual.logic.value_types.double=双精度浮点型
info_book.integrateddynamics.manual.logic.value_types.double.text1=实数，也可以是正数或负数。例如&e3.1415&0,&e4815162342&0,&e3.33333333&0...
info_book.integrateddynamics.manual.logic.value_types.double.text2=该变量类型是&l数字&r类别的一部分。
info_book.integrateddynamics.manual.logic.value_types.long=长整型
info_book.integrateddynamics.manual.logic.value_types.long.text1=和&6Integers&0类似,但它拥有更大的取值范围：&e-9223372036854775808&0~&e9223372036854775807&0之间。
info_book.integrateddynamics.manual.logic.value_types.long.text2=该变量类型是&l数字&r类别的一部分。
info_book.integrateddynamics.manual.logic.value_types.string=字符串
info_book.integrateddynamics.manual.logic.value_types.string.text1=一连串的字符，例如&4“aaa”&0, &4“Hi!”&0,&4“x!(àà)ç”&0...
info_book.integrateddynamics.manual.logic.value_types.list=列表
info_book.integrateddynamics.manual.logic.value_types.list.text1=包含某种&l变量类型&r的变量的列表。列表的所有元素只能包含相同变量类型的变量。例如&8(0,1,2,3)&0, &8(“a”,“b”,“c”)&0, &8(3,33,1,14,5,6)&0。
info_book.integrateddynamics.manual.logic.value_types.operator=运算符
info_book.integrateddynamics.manual.logic.value_types.operator.text1=一种包含对&2运算符&0调用的变量。运算符可以根据&lCurrying&r的概念执行来更灵活的检测数据。这个概念源于&lmeta编程&r,也就是把运算符本身视为变量被其他运算符处理。你能以此为基础创造你自己的运算符，并用于更加复杂的运算操作。
info_book.integrateddynamics.manual.logic.value_types.operator.text2=例如，你可以将加法&2运算符&0存入变量卡中。通过在运算符界面搜索运算符名称并从自动识别的下拉列表中选择它并单击来执行此操作。然后，您可以用它执行&6整型&0&l变量卡&r,这将得到具有输入类型和输出类型的新的虚拟运算符，其内部包含对执行&6整型&0的调用。再通过执行另一个&6整型&0得出一个新的&6整型&0。
info_book.integrateddynamics.manual.logic.value_types.operator.text3=&2运算符&0的其他操作在于&l逻辑编程器&r中可以找到，以进行更高级的检测,例如将列表减少为单个变量，或者基于&6条件&r过滤列表。
info_book.integrateddynamics.manual.logic.value_types.nbt.text1=&lMinecraft&r中的每个物品内部都使用着&3NBT&0数据结构。&3NBT&0是一种特殊的东西，可以将它理解为标签。他能保存一个物品多种不同类情况下的状态。例如，NBT数据能表示&8箱子&0的内部存储情况，NBT数据能表示&镐&0的附魔信息...
info_book.integrateddynamics.manual.logic.value_types.nbt.text2=变量卡可以对这些&3NBT&0进行调用，并能结合相应的运算符读取或操作这些数据。
info_book.integrateddynamics.manual.logic.value_types.nbt.text3=&3NBT&0在这个Mod中通常用作底层的备用机制，以防你在使用运算符时无法读取到特定状态的信息。
info_book.integrateddynamics.manual.logic.value_types.block=方块
info_book.integrateddynamics.manual.logic.value_types.block.text1=对&lMinecraft&r方块的调用，例如&8泥土&0,&8圆石&0,&8红色染色黏土&0,&8箱子&0....
info_book.integrateddynamics.manual.logic.value_types.item=物品
info_book.integrateddynamics.manual.logic.value_types.item.text1=对&lMinecraft&r物品的调用，例如&8苹果&0,&8红石&0,&8钻石镐&0,&8附魔剑&0....
info_book.integrateddynamics.manual.logic.value_types.entity=实体
info_book.integrateddynamics.manual.logic.value_types.entity.text1=对&lMinecraft&r实体的调用，例如&8僵尸&0,&8牛&0,&8玩家Direpig20&0....
info_book.integrateddynamics.manual.logic.value_types.fluid=流体
info_book.integrateddynamics.manual.logic.value_types.fluid.text1=对&lMinecraft&r流体的调用，例如1000mB&8岩浆&0,3mB&8水&0,943mb&8酒石酸&0,3030mB&8门瑞欧树脂&0....
info_book.integrateddynamics.manual.logic.variables.variable_card.text1=&l变量卡&r是这个MOD中逻辑传输的主要方式。变量卡可以存储对具有某个&l变量类型&r的某个&l变量值&r的调用。
info_book.integrateddynamics.manual.logic.variables.variable_card.text2=变量可以是静态的也可以是动态的。静态变量定义一次，之后永远不会改变。动态变量是由&l运算符&r或&l读取器&r对某种世界元素的&l检测&r的结果。 动态变量的典型的例子是Minecraft世界中不断变化的时间，或是方块读取器前方不断变换的方块，或是红石读取器前方不断变化的红石信号等级......
info_book.integrateddynamics.manual.logic.variables.variable_card.text3=动态变量仅在以某种方式请求变量时进行检测，例如在&l显示面板&r中显示变量，或者将其用作另一个动态变量检测的一部分。
info_book.integrateddynamics.manual.logic.variables.variable_card.text4=每个&l变量卡&r都有一个独有的ID，用于在内部网络中逻辑检测。当网络出现错误时，这些ID将显示给玩家以帮助调试。为了增强其可用性，可以使用&l注释器&r来给&l变量卡&r附上标签，这样可以让玩家看到标签而不是ID。
info_book.integrateddynamics.manual.logic.variables.variable_store.text1=一些复杂的变量必定会调用到许多子变量来进行检测，这些调用的变量必须存在于网络中。表示添加两个其他变量的动态变量必须能够在检测时访问这两个其他变量。访问这些其他变量必须在与正在检测动态变量的相同的网络中进行，这可以通过将其他变量卡放入&l变量卡箱&r来完成。网络中可存在多个变量卡箱。这些其他变量也可以调用某些变量，这些变量也应该存在于同一个网络中。
info_book.integrateddynamics.manual.parts=IO组件
info_book.integrateddynamics.manual.parts.introduction.text1=IO组件有很多种类型（如读取器，输出器，显示面板...）。它们可以贴附在&l逻辑线缆&r的每一侧。本节介绍的部分可以读取&l变量&r并且将它们作为&l变量&r的部件，以及可以根据&l变量&r在&l变量卡&r内执行操作的部件。
info_book.integrateddynamics.manual.parts.introduction.text3=A part's &lEnergy Channel&r determines where it can draw its energy from. -1 is the wildcard channel (it will match all channels), and 0 is the default channel (used by parts such as energy cells that don't have a channel setting). Finally, &lTarget Side&r determines which side of its target block will be interacted with. This defaults to the side that it's actually placed against.
info_book.integrateddynamics.manual.parts.introduction.text4=Some reader and writer parts only contain aspects when certain other mods are present. If no aspects are present for a certain part, a warning will be added to the item tooltip whenever you attempt to craft it.
info_book.integrateddynamics.manual.parts.reader.introduction.text1=使用&l读取器s&r完成创建动态变量的最简单的方法。存在不同类型的读取器，用于从世界读取信息，将其存储在&l变量卡&r中。每个&l读取器&r包含一个或多个&l界面&r用于读取不同的&l变量类型&r的不同的东西。
info_book.integrateddynamics.manual.parts.reader.inventory.text1=从设置面向容器中读取信息，如插槽和物品数量。这不会转移物品本身。
info_book.integrateddynamics.manual.parts.writer.effect.text1=基于某些变量和设置发射粒子。
info_book.integrateddynamics.manual.parts.writer.entity=Entity
info_book.integrateddynamics.manual.parts.writer.entity.text1=Configure and control entities.
info_book.integrateddynamics.manual.parts.writer.machine=Machine
info_book.integrateddynamics.manual.parts.writer.machine.text1=Configure and control machines.
info_book.integrateddynamics.manual.parts.writer.inventory.text1=执行与库存和管道相关的操作。这不会转移物品本身。
info_book.integrateddynamics.manual.parts.other.light.text1=一个简单的灯，可以是常开，也可以使用&1布尔&0或&6整型&0&l变量卡&r控制。
info_book.integrateddynamics.manual.parts.other.display.text1=一个有用的监控或调试工具，只显示一个&l变量卡&r的变量。通过&l扳手&r右键单击可以旋转显示和r。
info_book.integrateddynamics.manual.parts.other.connector_mono_directional.text1=有些时候，你的逻辑网络需要跨越很长的距离。虽然普通线缆可以做到这一点，但是将线缆长距离放置可能并不方便。
info_book.integrateddynamics.manual.parts.other.connector_mono_directional.text2=&l单向连接器&r能帮你长距离无线连接逻辑网络。在网络上接上一个连接器，并在想要连接的另一个网络上放置第二个连接器来完成连接。两个连接器必须位于同一直线上，并且距离小于或等于512个单位。当有效连接完成后，连接器将显示为激活状态。
info_book.integrateddynamics.manual.parts.other.connector_omni_directional.text1=虽然“单向”连接器对于单向远距离连接非常有用，但在某些情况下，这可能有点太受限制。
info_book.integrateddynamics.manual.parts.other.connector_omni_directional.text2=例如，您可能希望使用单个连接器与多个网络连接在一起，或者与其他维度的网络连接。对于这些情况，您可以使用&l全向&r连接器。
info_book.integrateddynamics.manual.parts.other.connector_omni_directional.text3=这些连接器在首次制作时将具有唯一的组ID，用于标识可以连接网络的组。 每个连接器组在放置在世界中时都有独特的粒子颜色，可以在物品的tooltips中看到组ID，或者在放置时右键单击连接器查看。通过合成组内的现有连接器可得到多个同组的连接器。
info_book.integrateddynamics.manual.parts.other.connector_omni_directional.text4=You can also change the group of existing connectors in two ways. Crafting one alone in a crafting table will assign it to a new group with no other members, and crafting two together will copy the first one's group to the second one.
info_book.integrateddynamics.manual.machines.materializer.text1=复制动态&l变量卡&r当前时刻的静态变量。必须插入动态&l变量卡&r，并且必须插入一个新的空&l变量卡&r，这将使其具有动态&l变量卡&r的当前值作为静态值。
info_book.integrateddynamics.manual.machines.materializer.text2=在您想要记录某个动态和变量卡变量的情况下，或者当您不再需要动态检测&l变量卡&r的情况下，这将非常有用。
info_book.integrateddynamics.manual.machines.proxy.text1=&l代理器&r可以用来动态地调用某个&l变量卡&r。它允许您插入&l变量卡&r，并写入一个新的&l变量卡&r，它将动态地获取代理中存在的&l变量卡&r的值。
info_book.integrateddynamics.manual.machines.proxy.text2=这在您具有&l变量卡&r链的情况下非常有用，但您仍然可以手动更改一个变量。然后，您可以代理该变量，这将允许它随时与另一个变量交换。
info_book.integrateddynamics.manual.machines.delay=延迟
info_book.integrateddynamics.manual.machines.delay.text1=在某些情况下，您可能需要知道某种变量的历史数据。例如，您想要获取上一个变化前的值来算平均值或差值。
info_book.integrateddynamics.manual.machines.delay.text2=为此，您可以使用&l延迟&r，您可以使用它保持给定变量的值的历史记录。您可以通过插入要维护历史记录的&l变量卡&r来做到这一点。您现在可以创建并且&l变量卡&r将调用对应于历史记录的值列表。
info_book.integrateddynamics.manual.machines.delay.text3=最旧的变量对应于列表中的最后一个元素。您可以通过gui调整历史记录的最大长度。
info_book.integrateddynamics.manual.machines.energy_battery.text4=When this battery is held in your inventory, &lauto-supply&r mode can be enabled by shift+right clicking. When enabled, this battery will automatically try to fill the items you are holding in your two hands with energy.
info_book.integrateddynamics.manual.machines.mechanical_squeezer=Mechanical Squeezer
info_book.integrateddynamics.manual.machines.mechanical_squeezer.text1=There will come a time, when you will have had enough of all this jumping on &lSqueezers&r. If you haven't automated your &lSqueezers&r by then, perhaps it's time to look into making a &lMechanical Squeezers&r. It does not require any manual effort, but it requires energy to run. This also makes it significantly faster than the regular &lSqueezers&r and allows more things to be squeezed with a higher yield.
info_book.integrateddynamics.manual.machines.mechanical_drying_basin=Mechanical Drying Basin
info_book.integrateddynamics.manual.machines.mechanical_drying_basin.text1=Drying with the &lDrying Basin&r can take a while. If you want things to go faster, or if you want to be able to dry more things, you can use the &lMechanical Drying Basin&r, which requires energy to run.
info_book.integrateddynamics.manual.logic_programming.text1=创建动态变量卡的另一种方法是通过在一个或多个变量卡上执行&l运算符&r来生成新的&l变量卡&r。一个&l运算符&r的一个例子是添加了两个&l数字&r，形成一个新的&l数字&r。
info_book.integrateddynamics.manual.logic_programming.text2=&l运算符&r可以有一个或多个输入值，并具有一个输出值。在大多数情况下，输入和输出具有一定的&l变量类型&r，否则它们将具有&l任意&r变量类型。具有单个输入和一个输出的&l运算符&r&l布尔&r被称为&l条件&r。
info_book.integrateddynamics.manual.logic_programming.text3=&l逻辑编程器&r包含大量的&l运算符&r的集合。它还允许您为所有&l变量类型&r创建静态和变量卡&r。选择&l运算符&r后，应在预期的输入插槽中插入有效&l变量卡&r。最后，应在输出插槽中插入另一个&l变量卡&r。如果&l运算符&r有效，则会将新的动态变量写入卡中。 请记住，调用的&l变量卡&r必须存在于&l运算符&r将被检测的同一网络中的&l变量卡箱&r中。
info_book.integrateddynamics.manual.logic_programming.text4=&l逻辑编程器&r 可以使用顶部的搜索框，通过名称搜索&l运算符&r的列表。它还允许您通过在左下角插入这些类型的&l变量卡&r输入或输出变量类型进行过滤。
info_book.integrateddynamics.manual.logic_programming.text6=&l逻辑编程器&r以方块形式和物品形式存在。两者都可以通过将它们置于工作台中进行切换。
